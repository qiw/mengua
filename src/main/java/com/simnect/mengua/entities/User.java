package com.simnect.mengua.entities;

// Generated Mar 13, 2014 9:52:52 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "menguadb")
public class User implements java.io.Serializable {

	private static final long serialVersionUID = 89023140986594581L;
	private Long userId;
	private String displayName;
	private String email;
	private String profileImageUrl;
	private String password;
	private Date createdAt;
	private Date updatedAt;
	private Set<Like> likes = new HashSet<Like>(0);
	private Set<UserGame> userGames = new HashSet<UserGame>(0);
	private Set<Snippet> snippets = new HashSet<Snippet>(0);
	private Set<Token> tokens = new HashSet<Token>(0);

	public User() {
	}

	public User(String displayName, String email, String password,
			Date createdAt, Date updatedAt) {
		this.displayName = displayName;
		this.email = email;
		this.password = password;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public User(String displayName, String email, String profileImageUrl,
			String password, Date createdAt, Date updatedAt, Set<Like> likes,
			Set<UserGame> userGames, Set<Snippet> snippets, Set<Token> tokens) {
		this.displayName = displayName;
		this.email = email;
		this.profileImageUrl = profileImageUrl;
		this.password = password;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.likes = likes;
		this.userGames = userGames;
		this.snippets = snippets;
		this.tokens = tokens;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_id", unique = true, nullable = false)
	public Long getUserId() {
		return this.userId;
	}

	public void setUserId(Long userId) {
		this.userId = userId;
	}

	@Column(name = "display_name", nullable = false, length = 512)
	public String getDisplayName() {
		return this.displayName;
	}

	public void setDisplayName(String displayName) {
		this.displayName = displayName;
	}

	@Column(name = "email", nullable = false, length = 512)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "profile_image_url", length = 2083)
	public String getProfileImageUrl() {
		return this.profileImageUrl;
	}

	public void setProfileImageUrl(String profileImageUrl) {
		this.profileImageUrl = profileImageUrl;
	}

	@Column(name = "password", nullable = false, length = 1024)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Like> getLikes() {
		return this.likes;
	}

	public void setLikes(Set<Like> likes) {
		this.likes = likes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserGame> getUserGames() {
		return this.userGames;
	}

	public void setUserGames(Set<UserGame> userGames) {
		this.userGames = userGames;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Snippet> getSnippets() {
		return this.snippets;
	}

	public void setSnippets(Set<Snippet> snippets) {
		this.snippets = snippets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Token> getTokens() {
		return this.tokens;
	}

	public void setTokens(Set<Token> tokens) {
		this.tokens = tokens;
	}

}
