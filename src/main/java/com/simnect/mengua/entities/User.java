package com.simnect.mengua.entities;

// Generated Mar 13, 2014 9:52:52 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.ejb.Stateless;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.hibernate.validator.constraints.Email;

import com.simnect.mengua.entities.base.MenguaEntity;

/**
 * User generated by hbm2java
 */
@Entity
@Stateless
@Table(name = "user")
public class User extends MenguaEntity implements Serializable {

  private static final long serialVersionUID = 89023140986594581L;
  private Long userId;
  @NotNull
  private String displayName;
  @Email
  @NotNull
  private String email;
  private String profileImageUrl;
  @NotNull
  private String password;
  @NotNull
  private String gender;
  private String place;
  private Date birthday;
  private String description;
  private Date createdAt;
  private Date updatedAt;
  private Set<Like> likes = new HashSet<Like>(0);
  private Set<UserGame> userGames = new HashSet<UserGame>(0);
  private Set<Snippet> snippets = new HashSet<Snippet>(0);
  private Set<Token> tokens = new HashSet<Token>(0);

  public User() {
  }

  public User(String displayName, String email, String password,
      Date createdAt, Date updatedAt) {
    this.displayName = displayName;
    this.email = email;
    this.password = password;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  public User(String displayName, String email, String profileImageUrl,
      String password, String gender, String place, Date birthday,
      String description, Date createdAt, Date updatedAt, Set<Like> likes,
      Set<UserGame> userGames, Set<Snippet> snippets, Set<Token> tokens) {
    this.displayName = displayName;
    this.email = email;
    this.profileImageUrl = profileImageUrl;
    this.password = password;
    this.gender = gender;
    this.place = place;
    this.birthday = birthday;
    this.description = description;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.likes = likes;
    this.userGames = userGames;
    this.snippets = snippets;
    this.tokens = tokens;
  }

  @Id
  @GeneratedValue(strategy = IDENTITY)
  @Column(name = "user_id", unique = true, nullable = false)
  public Long getUserId() {
    return this.userId;
  }

  public void setUserId(Long userId) {
    this.userId = userId;
  }

  @Column(name = "display_name", nullable = false, length = 512)
  public String getDisplayName() {
    return this.displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  @Column(name = "email", nullable = false, length = 512)
  public String getEmail() {
    return this.email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  @Column(name = "profile_image_url", length = 2083)
  public String getProfileImageUrl() {
    return this.profileImageUrl;
  }

  public void setProfileImageUrl(String profileImageUrl) {
    this.profileImageUrl = profileImageUrl;
  }

  @Column(name = "password", nullable = false, length = 1024)
  public String getPassword() {
    return this.password;
  }

  public void setPassword(String password) {
    this.password = password;
  }
  
  @Column(name = "gender", nullable = false, length = 512)
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }

  @Column(name = "place", length = 512)
  public String getPlace() {
    return place;
  }

  public void setPlace(String place) {
    this.place = place;
  }

  @Column(name = "birthday", length = 19)
  public Date getBirthday() {
    return birthday;
  }

  public void setBirthday(Date birthday) {
    this.birthday = birthday;
  }

  @Column(name = "description", length = 1024)
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "created_at", nullable = false, length = 19)
  public Date getCreatedAt() {
    return this.createdAt;
  }

  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "updated_at", nullable = false, length = 19)
  public Date getUpdatedAt() {
    return this.updatedAt;
  }

  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }

  @OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
  public Set<Like> getLikes() {
    return this.likes;
  }

  public void setLikes(Set<Like> likes) {
    this.likes = likes;
  }

  @OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
  public Set<UserGame> getUserGames() {
    return this.userGames;
  }

  public void setUserGames(Set<UserGame> userGames) {
    this.userGames = userGames;
  }

  @OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
  public Set<Snippet> getSnippets() {
    return this.snippets;
  }

  public void setSnippets(Set<Snippet> snippets) {
    this.snippets = snippets;
  }

  @OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
  public Set<Token> getTokens() {
    return this.tokens;
  }

  public void setTokens(Set<Token> tokens) {
    this.tokens = tokens;
  }

  @Override
  public Long retrievePKId() {
    return this.userId;
  }

  @Override
  public void syncCreatedAt() {
    this.createdAt = new Date();
  }

  @Override
  public void syncUpdatedAt() {
    this.updatedAt = new Date();
  }

  @Override
  public String toString() {
    return ToStringBuilder.reflectionToString(this);
  }
}
