package com.simnect.mengua.entities;

// Generated Mar 13, 2014 9:52:52 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.apache.commons.lang3.builder.ToStringBuilder;

import com.simnect.mengua.entities.base.MenguaEntity;

/**
 * Snippet generated by hbm2java
 */
@Entity
@Table(name = "snippet")
public class Snippet extends MenguaEntity implements Serializable {

	private static final long serialVersionUID = 4802653917795456323L;
	private Long snippetId;
	private User user;
	private Snippet snippet;
	private String post;
	private String lang;
	private String place;
	private Double longitude;
	private Double latitude;
	private Date createdAt;
	private Date updatedAt;
	private Set<Media> medias = new HashSet<Media>(0);
	private Set<Snippet> snippets = new HashSet<Snippet>(0);

	public Snippet() {
	}

	public Snippet(User user, Snippet snippet, String lang, Date createdAt,
			Date updatedAt) {
		this.user = user;
		this.snippet = snippet;
		this.lang = lang;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Snippet(User user, Snippet snippet, String post, String lang,
			String place, Double longitude, Double latitude, Date createdAt,
			Date updatedAt, Set<Media> medias, Set<Snippet> snippets) {
		this.user = user;
		this.snippet = snippet;
		this.post = post;
		this.lang = lang;
		this.place = place;
		this.longitude = longitude;
		this.latitude = latitude;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.medias = medias;
		this.snippets = snippets;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "snippet_id", unique = true, nullable = false)
	public Long getSnippetId() {
		return this.snippetId;
	}

	public void setSnippetId(Long snippetId) {
		this.snippetId = snippetId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "in_reply_to_id", nullable = false)
	public Snippet getSnippet() {
		return this.snippet;
	}

	public void setSnippet(Snippet snippet) {
		this.snippet = snippet;
	}

	@Column(name = "post", length = 16777215)
	public String getPost() {
		return this.post;
	}

	public void setPost(String post) {
		this.post = post;
	}

	@Column(name = "lang", nullable = false, length = 128)
	public String getLang() {
		return this.lang;
	}

	public void setLang(String lang) {
		this.lang = lang;
	}

	@Column(name = "place", length = 1024)
	public String getPlace() {
		return this.place;
	}

	public void setPlace(String place) {
		this.place = place;
	}

	@Column(name = "longitude", precision = 22, scale = 0)
	public Double getLongitude() {
		return this.longitude;
	}

	public void setLongitude(Double longitude) {
		this.longitude = longitude;
	}

	@Column(name = "latitude", precision = 22, scale = 0)
	public Double getLatitude() {
		return this.latitude;
	}

	public void setLatitude(Double latitude) {
		this.latitude = latitude;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "snippet")
	public Set<Media> getMedias() {
		return this.medias;
	}

	public void setMedias(Set<Media> medias) {
		this.medias = medias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "snippet")
	public Set<Snippet> getSnippets() {
		return this.snippets;
	}

	public void setSnippets(Set<Snippet> snippets) {
		this.snippets = snippets;
	}
	
	@Override
	public Long retrievePKId() {
		return this.snippetId;
	}

	@Override
	public void syncCreatedAt() {
		this.createdAt = new Date();
	}

	@Override
	public void syncUpdatedAt() {
		this.updatedAt = new Date();
	}
	
  @Override
  public String toString() {
    return ToStringBuilder.reflectionToString(this);
  }
}
